name: "Test Checksums Fix"

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  mock-build:
    name: "Mock Build PHP ${{ matrix.php-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-version: "8.1"
            os: "macos-aarch64"
          - php-version: "8.2"
            os: "macos-aarch64"
          - php-version: "8.3"
            os: "macos-aarch64"
          - php-version: "8.4"
            os: "macos-aarch64"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Mock PHP Build"
        run: |
          # Create mock PHP binaries
          mkdir -p buildroot/bin
          echo "#!/bin/bash\necho 'Mock PHP CLI ${{ matrix.php-version }}'" > buildroot/bin/php
          echo "#!/bin/bash\necho 'Mock PHP FPM ${{ matrix.php-version }}'" > buildroot/bin/php-fpm
          chmod +x buildroot/bin/php buildroot/bin/php-fpm

      - name: "Create Mock Archive"
        run: |
          # Create mock archive (faster than real tar.xz)
          tar -cf php-${{ matrix.php-version }}-${{ matrix.os }}.tar buildroot/bin/php buildroot/bin/php-fpm

          # Calculate real SHA512 for testing
          ARCHIVE_SHA512=$(sha512sum php-${{ matrix.php-version }}-${{ matrix.os }}.tar | cut -d' ' -f1)

          # Save archive info like the real script
          echo "ARCHIVE_NAME=php-${{ matrix.php-version }}-${{ matrix.os }}.tar" > archive_info.txt
          echo "ARCHIVE_SHA512=$ARCHIVE_SHA512" >> archive_info.txt

      - name: "Save checksum with unique name"
        run: |
          # Load archive info
          source archive_info.txt

          # Create checksum file with UNIQUE name per job
          echo "${{ matrix.php-version }},${{ matrix.os }},$ARCHIVE_SHA512" > checksums-${{ matrix.php-version }}-${{ matrix.os }}.txt

      - name: "Upload checksum artifact"
        uses: actions/upload-artifact@v4
        with:
          name: checksum-${{ matrix.php-version }}-${{ matrix.os }}
          path: checksums-${{ matrix.php-version }}-${{ matrix.os }}.txt
          retention-days: 1

  test-consolidation:
    name: "Test Checksums Consolidation"
    runs-on: ubuntu-latest
    needs: [mock-build]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      # Download all checksum artifacts
      - name: "Download checksums"
        uses: actions/download-artifact@v4
        with:
          pattern: checksum-*
          merge-multiple: true

      - name: "Test consolidation"
        run: |
          echo "=== Downloaded files ==="
          ls -la

          echo "=== Consolidating checksums ==="
          # Consolidate all checksum files
          cat checksums-*.txt > all_checksums.txt 2>/dev/null || echo "No checksum files found"

          echo "=== Final consolidated checksums ==="
          cat all_checksums.txt

          echo "=== Count of versions ==="
          wc -l all_checksums.txt

          # Validate we have 4 lines (4 versions)
          LINES=$(wc -l < all_checksums.txt)
          if [ "$LINES" -eq 4 ]; then
            echo "✅ SUCCESS: Found all 4 versions"
          else
            echo "❌ FAILURE: Expected 4 versions, found $LINES"
            exit 1
          fi

      - name: "Test with Python script"
        run: |
          # Create minimal metadata for testing
          echo '{"last_sync": "", "versions": {}}' > metadata.json

          # Create mock build matrix
          BUILD_MATRIX='{"include": [{"php-version": "8.1", "os": "macos-aarch64", "versionId": 80100, "releaseDate": "2022-11-25", "activeSupportEndDate": "2024-12-31", "eolDate": "2025-12-31", "isEOLVersion": false, "isSecureVersion": true, "isLatestVersion": false, "isFutureVersion": false, "isNextVersion": false}, {"php-version": "8.2", "os": "macos-aarch64", "versionId": 80200, "releaseDate": "2022-12-08", "activeSupportEndDate": "2024-12-31", "eolDate": "2026-12-31", "isEOLVersion": false, "isSecureVersion": true, "isLatestVersion": false, "isFutureVersion": false, "isNextVersion": false}, {"php-version": "8.3", "os": "macos-aarch64", "versionId": 80300, "releaseDate": "2023-11-23", "activeSupportEndDate": "2025-12-31", "eolDate": "2027-12-31", "isEOLVersion": false, "isSecureVersion": true, "isLatestVersion": false, "isFutureVersion": false, "isNextVersion": false}, {"php-version": "8.4", "os": "macos-aarch64", "versionId": 80400, "releaseDate": "2024-11-21", "activeSupportEndDate": "2026-12-31", "eolDate": "2028-12-31", "isEOLVersion": false, "isSecureVersion": true, "isLatestVersion": true, "isFutureVersion": false, "isNextVersion": false}]}'

          # Test the script
          python3 .github/scripts/php_build_manager.py update-metadata \
            --build-matrix "$BUILD_MATRIX" \
            --archive-checksums "$(cat all_checksums.txt)"

          echo "=== Final metadata.json ==="
          cat metadata.json

          # Validate all 4 versions are in metadata
          VERSIONS=$(cat metadata.json | python3 -c "import json, sys; data=json.load(sys.stdin); print(len(data['versions']))")
          if [ "$VERSIONS" -eq 4 ]; then
            echo "✅ SUCCESS: All 4 versions in metadata"
          else
            echo "❌ FAILURE: Expected 4 versions in metadata, found $VERSIONS"
            exit 1
          fi
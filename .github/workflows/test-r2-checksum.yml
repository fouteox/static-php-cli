name: "Test R2 SHA-256 Checksum"

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test-upload:
    name: "Test SHA-256 Upload to R2"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Create test file"
        run: |
          echo "This is a test file for R2 SHA-256 checksum validation" > test-file.txt
          echo "Generated at: $(date -u)" >> test-file.txt
          echo "Random data: $(openssl rand -hex 32)" >> test-file.txt

          echo "Test file created:"
          cat test-file.txt
          echo ""
          echo "File size: $(wc -c < test-file.txt) bytes"

      - name: "Test 1: Upload with aws s3api put-object (captures checksum)"
        id: upload-s3api
        run: |
          TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")
          TEST_FILE="test-r2-checksum-${TIMESTAMP}.txt"

          echo "========================================="
          echo "TEST 1: Using aws s3api put-object"
          echo "========================================="

          # Upload using s3api (low-level, returns JSON)
          echo "Uploading $TEST_FILE..."
          UPLOAD_RESULT=$(aws s3api put-object \
            --bucket ${{ secrets.R2_BUCKET_NAME }} \
            --key "$TEST_FILE" \
            --body test-file.txt \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            --checksum-algorithm SHA256 \
            --metadata testkey="testvalue",timestamp="$TIMESTAMP" \
            --output json)

          echo "Upload result:"
          echo "$UPLOAD_RESULT" | jq '.'

          # Extract checksum from response
          CHECKSUM=$(echo "$UPLOAD_RESULT" | jq -r '.ChecksumSHA256')
          echo ""
          echo "✓ Checksum from upload response: $CHECKSUM"

          # Save for next steps
          echo "TEST_FILE=$TEST_FILE" >> $GITHUB_OUTPUT
          echo "CHECKSUM_FROM_UPLOAD=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: "Test 2: Verify checksum via head-object"
        run: |
          TEST_FILE="${{ steps.upload-s3api.outputs.TEST_FILE }}"
          CHECKSUM_FROM_UPLOAD="${{ steps.upload-s3api.outputs.CHECKSUM_FROM_UPLOAD }}"

          echo "========================================="
          echo "TEST 2: Verify via aws s3api head-object"
          echo "========================================="

          # Get object metadata
          HEAD_RESULT=$(aws s3api head-object \
            --bucket ${{ secrets.R2_BUCKET_NAME }} \
            --key "$TEST_FILE" \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            --output json)

          echo "Head-object result:"
          echo "$HEAD_RESULT" | jq '.'

          CHECKSUM_FROM_HEAD=$(echo "$HEAD_RESULT" | jq -r '.ChecksumSHA256')
          echo ""
          echo "✓ Checksum from head-object: $CHECKSUM_FROM_HEAD"
          echo ""

          # Compare
          if [[ "$CHECKSUM_FROM_UPLOAD" == "$CHECKSUM_FROM_HEAD" ]]; then
            echo "✅ SUCCESS: Checksums match!"
            echo "   Upload:      $CHECKSUM_FROM_UPLOAD"
            echo "   Head-object: $CHECKSUM_FROM_HEAD"
          else
            echo "❌ FAIL: Checksums don't match!"
            echo "   Upload:      $CHECKSUM_FROM_UPLOAD"
            echo "   Head-object: $CHECKSUM_FROM_HEAD"
            exit 1
          fi

      - name: "Test 3: Download and verify checksum locally"
        run: |
          TEST_FILE="${{ steps.upload-s3api.outputs.TEST_FILE }}"
          CHECKSUM_FROM_UPLOAD="${{ steps.upload-s3api.outputs.CHECKSUM_FROM_UPLOAD }}"

          echo "========================================="
          echo "TEST 3: Download and verify locally"
          echo "========================================="

          # Download file
          aws s3api get-object \
            --bucket ${{ secrets.R2_BUCKET_NAME }} \
            --key "$TEST_FILE" \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            downloaded-file.txt \
            --output json > download-result.json

          echo "Download result:"
          cat download-result.json | jq '.'

          CHECKSUM_FROM_DOWNLOAD=$(cat download-result.json | jq -r '.ChecksumSHA256')
          echo ""
          echo "✓ Checksum from download response: $CHECKSUM_FROM_DOWNLOAD"

          # Calculate local SHA-256 (base64 encoded to match R2 format)
          LOCAL_CHECKSUM=$(openssl dgst -sha256 -binary downloaded-file.txt | base64)
          echo "✓ Local SHA-256 calculation: $LOCAL_CHECKSUM"
          echo ""

          # Compare all three
          echo "========================================="
          echo "FINAL COMPARISON:"
          echo "========================================="
          echo "Upload response:   $CHECKSUM_FROM_UPLOAD"
          echo "Download response: $CHECKSUM_FROM_DOWNLOAD"
          echo "Local calculation: $LOCAL_CHECKSUM"
          echo ""

          if [[ "$CHECKSUM_FROM_UPLOAD" == "$LOCAL_CHECKSUM" ]] && \
             [[ "$CHECKSUM_FROM_DOWNLOAD" == "$LOCAL_CHECKSUM" ]]; then
            echo "✅ SUCCESS: All checksums match!"
            echo ""
            echo "VERIFIED: R2 SHA-256 checksum works correctly!"
          else
            echo "❌ FAIL: Checksum mismatch detected!"
            exit 1
          fi

          # Verify file content
          echo ""
          echo "Downloaded file content:"
          cat downloaded-file.txt

      - name: "Test 4: Compare with aws s3 cp (high-level command)"
        run: |
          TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")
          TEST_FILE_CP="test-r2-s3cp-${TIMESTAMP}.txt"

          echo "========================================="
          echo "TEST 4: Using aws s3 cp (for comparison)"
          echo "========================================="

          # Try with aws s3 cp
          echo "Uploading with 'aws s3 cp'..."
          aws s3 cp test-file.txt \
            s3://${{ secrets.R2_BUCKET_NAME }}/"$TEST_FILE_CP" \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            --checksum-algorithm SHA256

          echo ""
          echo "Note: 'aws s3 cp' doesn't output the checksum in stdout"
          echo "We need to use 'aws s3api head-object' to retrieve it:"
          echo ""

          # Get checksum via head-object
          CHECKSUM_CP=$(aws s3api head-object \
            --bucket ${{ secrets.R2_BUCKET_NAME }} \
            --key "$TEST_FILE_CP" \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            --query 'ChecksumSHA256' \
            --output text)

          echo "✓ Checksum (via head-object): $CHECKSUM_CP"
          echo ""
          echo "⚠️  CONCLUSION: Use 'aws s3api put-object' to capture checksum"
          echo "   in the upload response and avoid extra API call!"

      - name: "Cleanup test files"
        if: always()
        run: |
          TEST_FILE="${{ steps.upload-s3api.outputs.TEST_FILE }}"

          echo "Cleaning up test files from R2..."

          # Delete both test files
          if [[ -n "$TEST_FILE" ]]; then
            aws s3 rm s3://${{ secrets.R2_BUCKET_NAME }}/"$TEST_FILE" \
              --endpoint-url ${{ secrets.R2_ENDPOINT }} || true
          fi

          # Delete s3 cp test file (list and delete files starting with test-r2-)
          aws s3api list-objects-v2 \
            --bucket ${{ secrets.R2_BUCKET_NAME }} \
            --prefix "test-r2-" \
            --endpoint-url ${{ secrets.R2_ENDPOINT }} \
            --query 'Contents[].Key' \
            --output text | tr '\t' '\n' | while read key; do
            if [[ -n "$key" && "$key" != "None" ]]; then
              echo "Deleting: $key"
              aws s3 rm s3://${{ secrets.R2_BUCKET_NAME }}/"$key" \
                --endpoint-url ${{ secrets.R2_ENDPOINT }} || true
            fi
          done

          echo "✓ Cleanup complete"
